Лабораторна робота 5

В даній роботі слід реалізувати типову архітектуру збору телеметричних даних з вітряків 
вітроелектростанцій (ВЕС) та передачу їх у хмару (на прикладі Microsoft Azure)

1.  Створити ресурс IoT Hub у Microsoft Azure.

2. Створити IoT-пристрої (device identities) в IoT Hub. Кількість пристроїв 
визначається:
МІЙ ВАРІАНТ: 5 - для студентів, порядковий номер у списку групи яких становить 21 і більше

Додатково: у випадку невчасної здачі лабораторної роботи, кількість пристроїв 
збільшується на 3

Набір даних, які передаються з турбін, слід вибрати з вказаних варіантів, поділивши ваш 
номер у списку групи на 4 та додавши 1 до остачі від ділення.

20. Роневич Дмитро
20 / 4 = 5 (остача - 0)
0 + 1 = 1 (мій варіант)

Варіант 1:
Метео- та атмосферні параметри
Параметр Опис
Швидкість вітру Головний вхідний сигнал для турбіни (м/с)
Напрям вітру Для орієнтації гондоли (азимут, градуси)
Температура повітря Впливає на густину повітря та ефективність генерації
Вологість Для оцінки корозійних ризиків

Приклад пакету даних:
{
  "turbine_id": "TURBINE_001",
  "timestamp": "2025-05-18T12:34:56Z",
  "wind_speed": 8.5,
  "wind_direction": 220,
  "rotor_rpm": 12.3,
  "active_power": 1450,
  "generator_temp": 67.4,
  "gearbox_temp": 72.1,
  "pitch_angle": 15.0,
}

Налаштування передачі телеметрії:

1. Зберегти згенеровані connection strings для створених пристроїв.

2. На основі прикладів створити симулятори пристроїв та реалізувати відправку 
телеметричних даних до IoT Hub з використанням протоколу MQTT.

3. Налаштувати передачу даних з IoT Hub до Event Hub.

4. Забезпечити мінімальне (збіднене) передавання інформації від сенсорів.

5. Передача телеметрії стартує в момент запуску симулятора, та відбувається у 
випадковий час у проміжку між <ваш_номер_в_списку_групи> і 56 секунд. Час 
передачі слід обирати з використанням randomize – тобто час передачі даних кожен
раз визначається окремо. Також слід перевірити діапазон значень сенсорів -він має 
відповідати реальним значенням. При генерації коду симулятора параметрів слід 
врахувати, що сигнали не можуть мінятись більш ніж на 10% між двома відліками, 
які передаються турбіною на IoT Hub

Підготовка кешу даних

1. Створити скрипт (мова програмування за вибором), який підключиться до Azure 
SQL DB.

2. Зчитує метадані з таблиць у базі даних (наприклад: локацію чи координати для 
Turbines, що саме вимірює певний сенсор, його назву, виробника, одиниці 
вимірювання з таблиці Sensors). Важливо: ваша спроектована база даних має 
містити інформацію про всі сенсори та параметри для 4х варіантів наборів даних

3. Завантажить ці дані у Redis Cache для подальшого швидкого доступу.
Збагачення телеметричних даних:

1. Реалізувати Azure Function, яка спрацьовує при надходженні повідомлень з IoT 
Hub.

2. Функція має:
oОтримувати телеметричні дані.
oЗдійснювати збагачення (data enrichment) за допомогою Redis.
oЗаписувати збагачені повідомлення у Delta Lake.  Оскільки Azure Functions 
не підтримує запис у Delta Lake напряму, використати 
бібліотеку Daft(https://www.getdaft.io), яка дозволяє працювати з цим 
форматом  Збереження реалізувати у форматі Delta (на базі Parquet 
+ _delta_log) у контейнері storage account